######################## CONDITION INFO SUBS ##############################

#----------------------load stimuli ---------------------------------------
sub 
	 LoadStimuli( string str, int numTrials) 
begin 
	
	input_file inputfile = new input_file;
	inputfile.open( str );    
	inputfile.set_delimiter( '\n' ); 						# for get_line()
	string sDummy = inputfile.get_line();					# dummy read of the first line
	loop int i = 0 until								
		inputfile.end_of_file() || (i > numTrials) || !inputfile.last_succeeded()
	begin
		i = i + 1;
		sDummy = inputfile.get_line();
		sDummy.split(",",asTrialInputData[i]);
		asCondition[i] 	= asTrialInputData[i][10];
		asAttachment[i]	= asTrialInputData[i][13];
		asPairNumber[i]	= asTrialInputData[i][12];
		
		if (asCondition[i] == "3") then 				# if entry is filler also save Question
			asAnswer[i] 		= asTrialInputData[i][15];							
			asQuestion[i]	   = asTrialInputData[i][14];	
		end;
		
	end;

	if !inputfile.last_succeeded() then
		term.print( "Error - not enough lines in stimuli list\n" )
	elseif !inputfile.end_of_file() then
		term.print( "Error - too many lines in stimuli list\n" )
	end;
   
	inputfile.close();
  	
end;

#---------------------------- Set up triggers -----------------------------

int triggerPair;
int trigger;

sub
	setupTrigger(string pair, string condition, string attachment)
begin
	asTrigger[1] = int(pair);
	if bool(attachment.find("N")) then						#noun attached = 1xx
		if condition == "1" then									#cond1 (different verb) = x1x
			loop int i = 1 until i > 9								#for each word set trigger 1-9
			begin
				asTrigger[i+1] = 110+i;	
				i = i+1;
			end;
		elseif condition == "2" then								#cond2 (different noun order) = x2x
			loop int i = 1 until i > 9								#for each word set trigger 1-9
			begin
				asTrigger[i+1] = 120+i;	
				i = i+1;
			end;
		elseif condition == "3" then								#cond3 (filler) = x3x
			loop int i = 1 until i > 9								#for each word set trigger 1-9
			begin
				asTrigger[i+1] = 130+i;	
				i = i+1;
			end;
			asTrigger[11] = 130;									#Trigger for question
		end;
	elseif bool(attachment.find("V")) then						#verb attached = 2xx
		if condition == "1" then									#cond1 (different verb) = x1x
			loop int i = 1 until i > 9								#for each word set trigger 1-9
			begin
				asTrigger[i+1] = 210+i;	
				i = i+1;
			end;
		elseif condition == "2" then								#cond2 (different noun order) = x2x
			loop int i = 1 until i > 9								#for each word set trigger 1-9
			begin
				asTrigger[i+1] = 220+i;	
				i = i+1;
			end;
		elseif condition == "3" then								#cond3 (filler) = x3x
			loop int i = 1 until i > 9								#for each word set trigger 1-9
			begin
				asTrigger[i+1] = 230+i;	
				i = i+1;
			end;
			asTrigger[11] = 230;									#Trigger for question
		end;
	end;
end;

#------------------------------------------- Set up target buttons for question ------------------------------------------------------------------------------
int targetButton;

sub
	 setupTargetButtonForTrial(string answer, string question)
begin
	array <string> parts [0];
	answer.split("/", parts );			# split into two answers, correct answer is always first
	double rand = random();				# randomly decide which side the correct answer is on

	if rand > 0.5 then
		Answer_1.set_caption(parts[1]);
		Answer_2.set_caption(parts[2]);
		targetButton = 1;											#should correspond to left button
	elseif rand <0.5 then
		Answer_1.set_caption(parts[2]);
		Answer_2.set_caption(parts[1]);
		targetButton = 2;											#should correspond to right button
	end;
	
	Answer_1.redraw();
	Answer_2.redraw();
	
	Question_words.set_caption(question);
	Question_words.redraw();
	Question.set_target_button(targetButton);
	Question.set_response_active(true);
	Question.set_event_code(question + ";" + answer +";" + string(targetButton));
end;

#------------------------------------------- Set up word length dependent timing ------------------------------------------------------------------------------

sub
	 setupTiming(array < string,2>& wordarray, int num)
begin
	loop int i = 1 until i > num	
	begin
		loop int j = 1 until j > 9
		begin

		string tmp = wordarray[i][j];
		asTiming[j] = 300+(tmp.count()*15);
		j = j+1;
	end;
	i = i+1;
	end;
end;

# --------------------------------------- Practice --------------------------------------------------------------------------
sub
	ShowPractice 	
begin
	
	int trial_id 		 = 1;
	int trialLoopStop  = 2;
		
	#----------------------trial loop -------------------------------
	loop  int trial_i = trial_id until trial_i > trialLoopStop
	begin
		setupTrigger( asPairNumber[trial_i], asCondition[trial_i], asAttachment[trial_i]);
		setupTiming(asTrialInputData,2);
		if asCondition[trial_i] == "3" then
		setupTargetButtonForTrial(asAnswer[trial_i], asQuestion[trial_i]);
		end;
		int isi = random( 500, 1000 );
		Event_iti.set_duration(isi);
		Trial_iti_fix.present();						

		# flash each word
		loop int word_i = 1 until word_i > 9						#display each word
		begin
			Text_words.set_caption(asTrialInputData[trial_i][word_i]);
			Text_words.redraw();
				
			Event_sentence.set_duration(asTiming[word_i]);
			Sentence_isi.set_deltat(asTiming[word_i]);

			if word_i == 9 then
				Sentence_isi.set_duration(blank_after_last_word);
			else 
				Sentence_isi.set_duration(gap_duration);
			end;
			
			Event_sentence.set_port_code(asTrigger[word_i+1]);
			Event_sentence.set_event_code(asTrialInputData[trial_i][word_i] + ";" + asPairNumber[trial_i] + ";PRACTICE" );
				
			Trial_show_sentence.present();
			word_i = word_i + 1;
		end;
		
		Trial_iti_blink.present();	
		
		#-------------------- present question -------------
		if asCondition[trial_i] == "3" then
			Trial_show_Question.present();	
		end;
			
		trial_i = trial_i + 1;
	end;			
end;

###############################################################################################################################################################
##															experimental trials
###############################################################################################################################################################
sub
	ShowWordsByWords 	
begin
#----------------------block loop -------------------------------------------------------------------------------------------
	int trialsPerBlock = totTrials / 4; 						# split trials in two blocks of equal length
	int trial_id 		 = 1;
	int trialLoopStop  = trialsPerBlock;
	int fillerCount	 = 0;
	
	loop int block = 1 until block > 4  						#looping through all trials
	begin	
		
		
	#----------------------trial loop ----------------------------------------------------------------------------------------
		loop  int trial_i = trial_id until trial_i > trialLoopStop
		begin
			setupTrigger( asPairNumber[trial_i], asCondition[trial_i], asAttachment[trial_i]);
			setupTiming(asTrialInputData,totTrials);
			if asCondition[trial_i] == "3" then
			setupTargetButtonForTrial(asAnswer[trial_i], asQuestion[trial_i]);
			end;
			int isi = random( 500, 1000 );
			Event_iti.set_duration(isi);
			Trial_iti_fix.present();						

			# flash each word
			loop int word_i = 1 until word_i > 9						#display each word
			begin
				Text_words.set_caption(asTrialInputData[trial_i][word_i]);
				Text_words.redraw();
				
				Event_sentence.set_duration(asTiming[word_i]);			# set time each word is displayed
			   Sentence_isi.set_deltat(asTiming[word_i]);				# set start time of empty screen relative to previous stimulus
	
				if word_i == 9 then
					Sentence_isi.set_duration(blank_after_last_word);	# set time the empty screen is displayed
				else 
					Sentence_isi.set_duration(gap_duration);
				end;
				
				Event_sentence.set_port_code(asTrigger[word_i+1]);
				Event_sentence.set_event_code(asTrialInputData[trial_i][word_i] + ";" + asPairNumber[trial_i] );

				Trial_show_sentence.present();
				word_i = word_i + 1;
			end;
			
			Trial_iti_blink.present();	
			
			#---------------------- present question every 4 fillers -------------------------------------------------------------------------
			if asCondition[trial_i] == "3" then
				fillerCount = fillerCount + 1;
				if mod(fillerCount, 2) == 0 then
					Trial_show_Question.present();	
				end;
			end;
			trial_i = trial_i + 1;
		end;
	
	
		if block == 1 || block == 2 || block == 3 then
			Trial_End_block.present(); #show 'end of block' message
		end;
		
		block = block + 1;	
		trial_id = trialLoopStop + 1;
		trialLoopStop = trialLoopStop + trialsPerBlock;
		
	end;	
end;

		
	