############################ LOGFILE ####################### 
#-----------------------------InitiateOutput-------------------
sub InitiateOutputFile(string str) begin
	Out.open_append(s_OutFile); 
	Out.print("\n\nDate and Time:\n");
	Out.print(string(inittime) + "\n");
	Out.print(date_time()); 
	string infoHeader = "\nSubject" + "\tTrial" + "\tWord" + "\tCondition" + "\tPairNum" + "\tVerbNum" + "\tAttachment" + "\tTime" + "\tDuration" + "\tAnswers" + "\tResponse"+ "\tResponseTime\n";
	Out.print (infoHeader);
	Out.close();
end;
#-----------------------------WriteOutput-------------------

sub WriteTrialToOutputFile(string str ) begin
	Out.open_append (str); # append
	loop int i = 1 until i > 9						
	begin
		TrialData = "";

		TrialData.append(string(iPPnr) + "\t");	#participant number
		TrialData.append(string(iTrialCount) + "\t");	#trial number
		TrialData.append(asTrialInputData[iTrialCount][i] + "\t");   #words presented
		TrialData.append(asCondition[iTrialCount] + "\t");   #condition
		TrialData.append(asPairNumber[iTrialCount] + "\t");   #pair number
		TrialData.append(asVerbNumber[iTrialCount] + "\t");   #verb number
		TrialData.append(asAttachment[iTrialCount] + "\t");   #attachment (VA or NA)
		TrialData.append(string(aiWordOnset[i]) + "\t");   #word onset		
		TrialData.append(string(aiTiming[i]) + "\n");   #word duration	
		
		Out.print( TrialData );
		i = i + 1;
    end;
	if asQuestion[iTrialCount].count() > 0 then
		TrialData = "";
		
		TrialData.append(string(iPPnr) + "\t");	#participant number
		TrialData.append(string(iTrialCount) + "\t");	#trial number
		TrialData.append(asQuestion[iTrialCount] + "\t");   #question presented
		TrialData.append("4\t");   #condition
		TrialData.append(asPairNumber[iTrialCount] + "\t");   #pair number
		TrialData.append(asVerbNumber[iTrialCount] + "\t");   #verb number
		TrialData.append(asAttachment[iTrialCount] + "\t");   #attachment (VA or NA)
		TrialData.append(" \t");   #word onset		
		TrialData.append(" \t");   #word duration	
		TrialData.append(asAnswer[iTrialCount] + "\t");   #answers
		TrialData.append(string(iResponseCorrect) + "\t");   #responses (1 - correct, 0 - incorrect)		
		TrialData.append(string(iResponseTime) + "\n");   #response time
		
		Out.print( TrialData );
	end;
	Out.close();	
end;
############################ GENERAL ####################### 
#--------------------------Get_Kbd_Input-------------------------------------
sub GetKeyboardInput(string inpstr1) begin

	t_Info1.set_caption(inpstr1);
	t_Info1.redraw();
	t_Info2.set_caption(" ");
	t_Info2.redraw();
	p_info.present();
	system_keyboard.set_case_mode(3); # enable capital letters
	sKeyboardInput = system_keyboard.get_input( p_info, t_Info2 );

end;
#----------------------load stimuli ---------------------------------------
sub 
	 LoadStimuli( string str, int numTrials) 
begin 
	
	input_file inputfile = new input_file;
	inputfile.open( str );    
	inputfile.set_delimiter( '\n' ); 						# for get_line()
	string sDummy = inputfile.get_line();					# dummy read of the first line
	loop int i = 0 until								
		inputfile.end_of_file() || (i > numTrials) || !inputfile.last_succeeded()
	begin
		i = i + 1;
		sDummy = inputfile.get_line();
		sDummy.split("\t",asTrialInputData[i]);
		asCondition[i] 	= asTrialInputData[i][10];
		asPairNumber[i]	= asTrialInputData[i][11];
		asAttachment[i]	= asTrialInputData[i][13];
		asVerbNumber[i] 	= asTrialInputData[i][14];
		
		if 15 < asTrialInputData[i].count() then 				# if entry is filler also save Question
			asAnswer[i] 		= asTrialInputData[i][16];							
			asQuestion[i]	   = asTrialInputData[i][15];	
		end;
		
	end;
	if !inputfile.last_succeeded() then
		term.print( "Error - not enough lines in stimuli list\n" )
	elseif !inputfile.end_of_file() then
		term.print( "Error - too many lines in stimuli list\n" )
	end;
   
	inputfile.close();
  	
end;

#---------------------------- Set up triggers -----------------------------

int triggerPair;
int trigger;

sub
	SetupTrigger(string pair, string condition, string attachment)
begin
	#aiTrigger[1] = int(pair);
	term.print(aiTrigger);
	term.print("\n");
	if bool(attachment.find("N")) then						#noun attached = 1xx
		if condition == "1" then									#cond1 (different verb) = x1x
			loop int i = 0 until i > 9								#for each word set trigger 1-9
			begin
				aiTrigger[i+1] = 110+i;	
				i = i+1;
			end;
		elseif condition == "2" then								#cond2 (different noun order) = x2x
			loop int i = 0 until i > 9								#for each word set trigger 1-9
			begin
				aiTrigger[i+1] = 120+i;	
				i = i+1;
			end;
		elseif condition == "3" then								#cond3 (filler) = x3x
			loop int i = 0 until i > 9								#for each word set trigger 1-9
			begin
				aiTrigger[i+1] = 130+i;	
				i = i+1;
			end;
			aiTrigger[10] = 130;									#Trigger for question
		end;
	elseif bool(attachment.find("V")) then						#verb attached = 2xx
		if condition == "1" then									#cond1 (different verb) = x1x
			loop int i = 0 until i > 9								#for each word set trigger 1-9
			begin
				aiTrigger[i+1] = 210+i;	
				i = i+1;
			end;
		elseif condition == "2" then								#cond2 (different noun order) = x2x
			loop int i = 0 until i > 9								#for each word set trigger 1-9
			begin
				aiTrigger[i+1] = 220+i;	
				i = i+1;
			end;
		elseif condition == "3" then								#cond3 (filler) = x3x
			loop int i = 0 until i > 9								#for each word set trigger 1-9
			begin
				aiTrigger[i+1] = 230+i;	
				i = i+1;
			end;
			aiTrigger[10] = 230;									#Trigger for question
		end;
	end;
end;

#------------------------------------------- Set up question ------------------------------------------------------------------------------

sub
	 SetupQuestion(string answer, string question)
begin
	array <string> parts [0];
	answer.split("/", parts );			# split into two answers, correct answer is always first
	double rand = random();				# randomly decide which side the correct answer is on

	if rand > 0.5 then
		t_answer1.set_caption(parts[1]);
		t_answer2.set_caption(parts[2]);
		iTargetButton = 3;											#should correspond to left button
	elseif rand <0.5 then
		t_answer1.set_caption(parts[2]);
		t_answer2.set_caption(parts[1]);
		iTargetButton = 4;											#should correspond to right button
	end;
	t_answer1.redraw();
	t_answer2.redraw();
	t_question.set_caption(question);
	t_question.redraw();

end;

#------------------------------------------- Set up words ------------------------------------------------------------------------------

sub
	 SetupWords(int num)
begin
	int i = num;
			t_word1.set_caption( asTrialInputData[i][1] );
			t_word1.redraw();
			t_word2.set_caption( asTrialInputData[i][2] );
			t_word2.redraw();
			t_word3.set_caption( asTrialInputData[i][3] );
			t_word3.redraw();
			t_word4.set_caption( asTrialInputData[i][4] );
			t_word4.redraw();
			t_word5.set_caption( asTrialInputData[i][5] );
			t_word5.redraw();
			t_word6.set_caption( asTrialInputData[i][6] );
			t_word6.redraw();
			t_word7.set_caption( asTrialInputData[i][7] );
			t_word7.redraw();
			t_word8.set_caption( asTrialInputData[i][8] );
			t_word8.redraw();
			t_word9.set_caption( asTrialInputData[i][9] );
			t_word9.redraw();
end;


#------------------------------------------- Set up word length dependent timing ------------------------------------------------------------------------------

sub
	 SetupTiming(array < string,2>& wordarray, int num)
begin
	int i = num;
	loop int j = 1 until j > 9
		begin

		string tmp = wordarray[i][j];
		aiTiming[j] = int((dWordBaseDuration+double(tmp.count())*(dWordDurationStepValue))-6.0);
		j = j+1;
	end;
end;

#-----------------------------WaitSubjectReady------------------------------------
sub WaitForAllButtonpress begin
    
   loop 
		iCountOld = response_manager.total_response_count()
   until response_manager.total_response_count() > iCountOld
   begin 
	end;
   
end;

sub WaitForExperimenterButtonpress begin
    
   loop 
		iCountOld = response_manager.total_response_count()
   until ((response_manager.total_response_count() > iCountOld)  && (response_manager.last_response() == 1))
   begin 
	end;
   
end;



############################ TASK ##############################################
#------------------------- Practice ------------------------------------
sub
	ShowPractice 	
begin			
	#----------------------trial loop -------------------------------
	loop  iTrialCount = 1 until iTrialCount > iTotalAmountOfPracticeTrials
	begin
		SetupTiming(asTrialInputData,iTrialCount);
		SetupWords(iTrialCount);
		if asQuestion[iTrialCount].count() > 0 then
			SetupQuestion(asAnswer[iTrialCount], asQuestion[iTrialCount]);
		end;
	
		int isi = random( 500, 1000 );
		p_fixation.present();
		wait_interval(isi);	
		# flash each word
		p_word1.present();
		wait_interval(aiTiming[1]);
		default.present();
		wait_interval(gap_duration);
		p_word2.present();
		wait_interval(aiTiming[2]);
		default.present();
		wait_interval(gap_duration);
		p_word3.present();
		wait_interval(aiTiming[3]);
		default.present();
		wait_interval(gap_duration);
		p_word4.present();
		wait_interval(aiTiming[4]);
		default.present();
		wait_interval(gap_duration);
		p_word5.present();
		wait_interval(aiTiming[5]);
		default.present();
		wait_interval(gap_duration);
		p_word6.present();
		wait_interval(aiTiming[6]);
		default.present();
		wait_interval(gap_duration);
		p_word7.present();
		wait_interval(aiTiming[7]);
		default.present();
		wait_interval(gap_duration);
		p_word8.present();
		wait_interval(aiTiming[8]);
		default.present();
		wait_interval(gap_duration);
		p_word9.present();
		wait_interval(aiTiming[9]);
		default.present();
		wait_interval(blank_after_last_word);
		#-------------------- present question -------------
		if asQuestion[iTrialCount].count() > 0 then
			p_question.present();	
			loop #loops during response time window
				iCountOld = response_manager.total_response_count();
				until (response_manager.total_response_count() > iCountOld) 
				begin end; #checks with each loop whether response has been made and saves response time 
				
				if (response_manager.total_response_count() > iCountOld) then	
					if (response_manager.last_response() == iTargetButton) then
						iResponseCorrect = 1;
					elseif (response_manager.last_response() != iTargetButton) then
						iResponseCorrect = 0;
					end;
				end;
		end;
		p_blink.present();	
		wait_interval(500);	
		
		iTrialCount = iTrialCount + 1;
	end;			
end;
#--------------------------- Main --------------------------------------
sub
	ShowMainTask	
begin			
	loop int block = 1 until block > 4  						
	begin	
	#----------------------trial loop -------------------------------		
		loop iTrialCount = iTrial_id until iTrialCount > iTrialLoopStop
		begin
			SetupTrigger( asPairNumber[iTrialCount], asCondition[iTrialCount], asAttachment[iTrialCount]);
			term.print(aiTrigger);
			term.print("\n");
			SetupTiming(asTrialInputData,iTrialCount);
			SetupWords(iTrialCount);
			if asQuestion[iTrialCount].count() > 0 then
				SetupQuestion(asAnswer[iTrialCount], asQuestion[iTrialCount]);
			end;
		
			int isi = random( 500, 1000 );
			p_fixation.present();
			wait_interval(isi);	
			# flash each word
			p_word1.present();
			#Oport.send_code(aiTrigger[1]);		
			aiWordOnset[1] = clock.time();
			wait_interval(aiTiming[1]);
			default.present();
			wait_interval(gap_duration);
			p_word2.present();
			#Oport.send_code(aiTrigger[2]);		
			aiWordOnset[2] = clock.time();
			wait_interval(aiTiming[2]);
			default.present();
			wait_interval(gap_duration);
			p_word3.present();
			#Oport.send_code(aiTrigger[3]);		
			aiWordOnset[3] = clock.time();
			wait_interval(aiTiming[3]);
			default.present();
			wait_interval(gap_duration);
			p_word4.present();
			#Oport.send_code(aiTrigger[4]);		
			aiWordOnset[4] = clock.time();
			wait_interval(aiTiming[4]);
			default.present();
			wait_interval(gap_duration);
			p_word5.present();
			#Oport.send_code(aiTrigger[5]);		
			aiWordOnset[5] = clock.time();
			wait_interval(aiTiming[5]);
			default.present();
			wait_interval(gap_duration);
			p_word6.present();
			#Oport.send_code(aiTrigger[6]);		
			aiWordOnset[6] = clock.time();
			wait_interval(aiTiming[6]);
			default.present();
			wait_interval(gap_duration);
			p_word7.present();
			#Oport.send_code(aiTrigger[7]);		
			aiWordOnset[7] = clock.time();
			wait_interval(aiTiming[7]);
			default.present();
			wait_interval(gap_duration);
			p_word8.present();
			#Oport.send_code(aiTrigger[8]);		
			aiWordOnset[8] = clock.time();
			wait_interval(aiTiming[8]);
			default.present();
			wait_interval(gap_duration);
			p_word9.present();
			#Oport.send_code(aiTrigger[9]);		
			aiWordOnset[9] = clock.time();
			wait_interval(aiTiming[9]);
			default.present();
			wait_interval(blank_after_last_word);

			#-------------------- present question -------------
			if asQuestion[iTrialCount].count() > 0 then
				p_question.present();
				#Oport.send_code(aiTrigger[10]);	
				loop #loops during response time window
					iCountOld = response_manager.total_response_count();
					until (response_manager.total_response_count() > iCountOld) 
					begin end;
					iResponseTime = clock.time();
					if (response_manager.total_response_count() > iCountOld) then	
						if (response_manager.last_response() == iTargetButton) then
							iResponseCorrect = 1;
						elseif (response_manager.last_response() != iTargetButton) then
							iResponseCorrect = 0;
						end;
					end;
			end;
			p_blink.present();	
			wait_interval(500);
			WriteTrialToOutputFile(s_OutFile);
	
			iTrialCount = iTrialCount + 1;
		end;
		if block == 1 || block == 2 || block == 3 then
			p_endofblock.present(); #show 'end of block' message
			WaitForExperimenterButtonpress();
		elseif block == 4 then
			p_endofexperiment.present()
		end;
		block = block + 1;	
		iTrial_id = iTrialLoopStop + 1;
		iTrialLoopStop = iTrialLoopStop + iTrialsPerBlock;
		WaitForAllButtonpress();
	end;
end;

